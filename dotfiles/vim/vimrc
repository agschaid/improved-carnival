
let mapleader = ','
let maplocalleader = ','

" always move in wrapped lines
noremap <silent> k gk
noremap <silent> j gj

imap <A-f> (╯°□°)╯︵ ┻━┻
imap <A-s> ¯\_(ツ)_/¯
imap <A-d> (⌐■_■)
imap <A-y> ┌П┐(ಠ_ಠ)
imap <A-l> L(° O °L)

" navigation in split windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" incremental search
set incsearch

" incremental search and replace
set inccommand=split
nmap <leader><leader>r :%s//\0/g<Left><Left><Left><Left><Left>a<BS>
xmap <leader><leader>r y:%s/<C-R>"/\0/g<Left><Left>a<BS>

:command! -bang -range NotNow <line1>,<line2>write<bang> >> ~/todo/notNow.txt | <line1>,<line2>delete _
:command! -bang -range Now <line1>,<line2>write<bang> >> ~/todo/todo.txt | <line1>,<line2>delete _

" clear search highlight
nmap <leader><leader><leader> :noh<CR>

" buffers are hidden and not unloaded  -> switch between buffers without save
set hidden

" Don't write backups. Some language servers have issues with backup files, see coc #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" easier copy
vnoremap <leader>c "+y<CR>


set ignorecase
set smartcase
set number
set background=light
set mouse=a

set tabstop=2
set shiftwidth=2
set expandtab

" make comments look pretty with Victor Mono
highlight Comment cterm=italic gui=italic

" show tabs and trailing whitespace. Use some less pronounced solarized color
set list
set listchars=tab:▸\ ,trail:·
:hi BadWhitespace ctermfg=240 " Solarized Base01
:match BadWhitespace / \+$/
:2match BadWhitespace /\t/

"""""""""""""""""""""""""""""""""""""""
" Not quite sure why I don't need those solarized values anymore.
" But after update to nixos 22.11 this broke vim
"""""""""""""""""""""""""""""""""""""""
" general values for solarized plugin 
" let g:solarized_termtrans = 1
" set background=dark " not sure why but this should always be dark 
" colorscheme solarized
"""""""""""""""""""""""""""""""""""""""


""" VALUES FOR SOLARIZED BRIGHT
" let g:limelight_conceal_ctermfg = 245  " Solarized Base1
" let g:limelight_conceal_guifg = '#8a8a8a'  " Solarized Base1

""" VALUES FOR SOLARIZED DARK
let g:limelight_conceal_ctermfg = 240  " Solarized Base01
let g:limelight_conceal_guifg = '#585858'  " Solarized Base01

" nnoremap <silent> MM :call LanguageClient_contextMenu()<CR>
" nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
" nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>

" NERDTREE CONFIG
" Not quite sure why this needs the 'function!' which (if I understand
" correctly) replaces a previous function definition . . . but there is no
" prefious definition.
function! BetterNerdTreeToggle()
    if &filetype == 'nerdtree' || exists("g:NERDTree") && g:NERDTree.IsOpen()
        :NERDTreeToggle
    elseif filereadable(expand('%'))
        NERDTreeFind
    else
        :NERDTree
    endif
endfunction
nnoremap <silent>TT :call BetterNerdTreeToggle()<CR>

" show dot files by default
let NERDTreeShowHidden=1
:hi Directory ctermfg=4  " fix directory coloring of NerdTree

""""""""
" GOYO "
""""""""
" by default start in programming linebreak width
let g:goyo_width = 120

" GOYO QUIT: START
" taken from https://github.com/junegunn/goyo.vim/wiki/Customization
" When Goyo is open :q usually just quits Goyo. Not vim. The code below changes this behavior.
function! s:goyo_enter()
  let b:quitting = 0
  let b:quitting_bang = 0
  autocmd QuitPre <buffer> let b:quitting = 1
  cabbrev <buffer> q! let b:quitting_bang = 1 <bar> q!
endfunction
nnoremap <leader><leader>g :Goyo<CR>

function! s:goyo_leave()
  " Quit Vim if this is the only remaining buffer
  if b:quitting && len(filter(range(1, bufnr('$')), 'buflisted(v:val)')) == 1
    if b:quitting_bang
      qa!
    else
      qa
    endif
  endif
endfunction

autocmd! User GoyoEnter call <SID>goyo_enter()
autocmd! User GoyoLeave call <SID>goyo_leave()
" GOYO QUIT: END

" CTRL-P CONFIG
let g:ctrlp_custom_ignore = '\v[\/](target|dist|jdt.ls-java-project)|(\.(swp|ico|git|svn))$'
" disable working path mode and limit ctrl+p to the current working directory
" https://stackoverflow.com/questions/29399349/cant-get-ctrlp-to-set-working-dir-as-root-folder
let g:ctrlp_working_path_mode = ''


"""""""
" FZF "
"""""""

" make :Ag not search in the filename.
command! -bang -nargs=* Ag call fzf#vim#ag(<q-args>, fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}), <bang>0)

""""""""
" TAGS "
""""""""

" open tags with word under cursor
nmap <leader><leader>t :Tags <c-r><c-a><CR>
nmap gd <c-]><CR>

"""""""""""""
" LIGHTLINE "
"""""""""""""

let g:lightline = {
    \ 'colorscheme': 'solarized',
    \ 'active' : {
    \   'left' : [ ['buffers'] ],
    \   'right' : [[ 'lineinfo' ]]
    \ },
    \ 'component_expand' : {
    \   'buffers': 'lightline#bufferline#buffers'
    \ },
    \ 'component_type': {
    \   'buffers': 'tabsel'
    \ }
    \ }

let g:lightline#bufferline#show_number = 1

" make them clickable
let g:lightline.component_raw = {'buffers': 1}
let g:lightline#bufferline#clickable = 1

" make modified indicator work in buffers
autocmd BufWritePost,TextChanged,TextChangedI * call lightline#update()

"""""""""""""""""
" YOUCOMPLETEME "
"""""""""""""""""
highlight Pmenu ctermfg=15 ctermbg=0 guifg=#ffffff guibg=#000000

"""""""""""""
" FAST-TAGS "
"""""""""""""
" not really a plugin. But it provides some config for vim
" https://github.com/elaforge/fast-tags/blob/master/tools/vimrc
augroup tags
au BufWritePost *.hs            silent !init-tags %
au BufWritePost *.hsc           silent !init-tags %
augroup END
